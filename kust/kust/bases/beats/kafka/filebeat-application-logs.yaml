apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: filebeat-application-logs
spec:
  type: filebeat
  version: 7.16.3
  config:
    filebeat.autodiscover.providers:
    - node: ${NODE_NAME}
      type: kubernetes
      labels.dedot: false
      annotations.dedot: false
      add_resource_metadata:
        namespace:
          enabled: true
          labels.dedot: false
          annotations.dedot: false
        node:
          enabled: false
          labels.dedot: false
          annotations.dedot: false
      hints.default_config.enabled: "false"
    processors:
      - add_kubernetes_metadata: {}
    output.kafka:
      enabled: true
      hosts: ["${KAFKA_HOST}"]
      topics:
      - topic: "${REGION}-application-logs"
        when.equals:
          stream: stdout
      - topic: "${REGION}-application-errors"
        when.equals:
          stream: stderr
      compression: gzip
      compression_level: 9
      message.max.bytes: 10485760
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: filebeat
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        containers:
        - name: filebeat
          securityContext:
            runAsUser: 0
          resources:
            requests:
              cpu: "20m"
              memory: "300Mi"
            limits:
              cpu: "500m"
              memory: "500Mi"
          env: []
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
        volumes:
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
