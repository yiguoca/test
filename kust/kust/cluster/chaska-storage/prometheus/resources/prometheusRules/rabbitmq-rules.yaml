apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    role: alert-rules
    app: rabbitmq
  name: prometheus-rabbitmq-rules
spec:
  groups:
  - name: rabbitMQ
    rules:
    - alert: RabbitmqDown
      expr: sum(rabbitmq_build_info) < 1
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Rabbitmq cluster down (instance {{ $labels.instance }})
        description: "Less than 1 node running in RabbitMQ cluster\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RabbitmqMemoryHigh
      expr: rabbitmq_process_resident_memory_bytes / rabbitmq_resident_memory_limit_bytes * 100 > 90
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Rabbitmq memory high (instance {{ $labels.instance }})
        description: "A node use more than 90% of allocated RAM\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RabbitmqTooManyUnackMessages
      expr: sum(rabbitmq_queue_messages_unacked) BY (queue) > 1000
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: Rabbitmq too many unacknowledged messages (instance {{ $labels.instance }})
        description: "Too many unacknowledged messages\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RabbitmqTooManyConnections
      expr: rabbitmq_connections > 1000
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Rabbitmq too many connections (instance {{ $labels.instance }})
        description: "The total connections of a node is too high\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RabbitmqNoQueueConsumer
      expr: rabbitmq_queue_consumers < 1
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: Rabbitmq no queue consumer (instance {{ $labels.instance }})
        description: "A queue has less than 1 consumer\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: RabbitmqUnroutableMessages
      expr: increase(rabbitmq_channel_messages_unroutable_returned_total[1m]) > 0 or increase(rabbitmq_channel_messages_unroutable_dropped_total[1m]) > 0
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Rabbitmq unroutable messages (instance {{ $labels.instance }})
        description: "A queue has unroutable messages\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

