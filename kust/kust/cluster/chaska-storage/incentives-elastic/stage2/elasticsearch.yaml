---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: incentives
spec:
  version: 8.11.1
  auth:
    roles:
    - secretName: readonly-api-role
    fileRealm:
    - secretName: incentives-elastic-users
  http:
    tls:
      certificate:
        secretName: incentives-es-cert
    service:
      spec:
        type: NodePort
        ports:
          - name: https
            nodePort: 32000
            port: 9200
            protocol: TCP
            targetPort: 9200
        selector:
          elasticsearch.k8s.elastic.co/cluster-name: "incentives"
          elasticsearch.k8s.elastic.co/node-master: "false"
  secureSettings:
  - secretName: azure-credentials
    entries:
    - key: blobstore-accountname
      path: azure.client.default.account
    - key: blobstore-key
      path: azure.client.default.key
  nodeSets:
  - name: incentives-master
    count: 3
    config:
      xpack:
        security:
          enabled: true
          authc.realms.file.file1.order: 0
      http:
        compression: true
        compression_level: 8
      transport:
        compress: true
      node.roles: ["master"]
      reindex.remote.whitelist: "incentives-search.fcaus-p-storage.autodata.tech:32000"
      reindex.ssl.certificate_authorities: "/usr/share/elasticsearch/config/certificates-source/tls.crt"
    volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 64Mi
          storageClassName: hpe-nimble-chaska-prod-retain
    podTemplate:
      spec:
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        - name: install-plugins
          command:
          - sh
          - -c
          - |
            bin/elasticsearch-plugin remove --purge repository-s3 prometheus-exporter
            bin/elasticsearch-plugin install -b repository-s3 https://github.com/mindw/elasticsearch-prometheus-exporter/releases/download/8.11.1.0/prometheus-exporter-8.11.1.0.zip
        - name: take-nfs-ownership
          command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/backup || true']
          volumeMounts:
          - name: elastic-backup
            mountPath:  /usr/share/elasticsearch/backup
        containers:
        - name: elasticsearch
          env:
          - name: path.repo
            value:  /usr/share/elasticsearch/backup
          resources:
            requests:
              memory: 1.5Gi
              cpu: 0.75
            limits:
              memory: 1.5Gi
              cpu: 2
          volumeMounts:
          - name: heap-jvm-options
            mountPath: /usr/share/elasticsearch/config/jvm.options.d/heap.jvm.options
            subPath: heap.jvm.options
          - name: elastic-cert-hillsboro
            mountPath: /usr/share/elasticsearch/config/certificates-source
          - name: elastic-backup
            mountPath: /usr/share/elasticsearch/backup
        volumes:
        - name: heap-jvm-options
          configMap:
            name: incentives-master-jvm-options
            items:
            - key: incentives.master.heap.jvm.options
              path: heap.jvm.options
        - name: elastic-cert-hillsboro
          secret:
            secretName: incentives-es-http-certs-public-hillsboro
        - name: elastic-backup
          persistentVolumeClaim:
            claimName: incentives-elastic-backup-pvc
  - name: incentives-data
    count: 5
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
        storageClassName: hpe-nimble-chaska-prod-retain
    config:
      http:
        compression: true
        compression_level: 9
      transport:
        compress: true
      node.roles: ["data", "ingest", "transform"]
      reindex.remote.whitelist: "incentives-search.fcaus-p-storage.autodata.tech:32000"
      reindex.ssl.certificate_authorities: "/usr/share/elasticsearch/config/certificates-source/tls.crt"
    podTemplate:
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    elasticsearch.k8s.elastic.co/cluster-name: incentives
                    elasticsearch.k8s.elastic.co/node-data: "true"
                topologyKey: kubernetes.io/hostname
              weight: 100
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        - name: install-plugins
          command:
          - sh
          - -c
          - |
            bin/elasticsearch-plugin remove --purge repository-s3 prometheus-exporter
            bin/elasticsearch-plugin install -b repository-s3 https://github.com/mindw/elasticsearch-prometheus-exporter/releases/download/8.11.1.0/prometheus-exporter-8.11.1.0.zip
        - name: take-nfs-ownership
          command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/backup || true']
          volumeMounts:
          - name: elastic-backup
            mountPath:  /usr/share/elasticsearch/backup
        containers:
        - name: elasticsearch
          env:
          - name: path.repo
            value:  /usr/share/elasticsearch/backup
          resources:
            requests:
              memory: 4Gi
              cpu: 2
            limits:
              memory: 4Gi
              cpu: 4500m
          volumeMounts:
          - name: heap-jvm-options
            mountPath: /usr/share/elasticsearch/config/jvm.options.d/heap.jvm.options
            subPath: heap.jvm.options
          - name: elastic-cert-hillsboro
            mountPath: /usr/share/elasticsearch/config/certificates-source
          - name: elastic-backup
            mountPath: /usr/share/elasticsearch/backup
        tolerations:
        - key: "node-role.kubernetes.io/project"
          operator: "Equal"
          value: "pcbu-869"
          effect: "NoSchedule"
        volumes:
        - name: heap-jvm-options
          configMap:
            name: incentives-data-jvm-options
            items:
            - key: incentives.data.heap.jvm.options
              path: heap.jvm.options
        - name: elastic-cert-hillsboro
          secret:
            secretName: incentives-es-http-certs-public-hillsboro
        - name: elastic-backup
          persistentVolumeClaim:
            claimName: incentives-elastic-backup-pvc
  - name: incentives-data-large
    count: 10
    volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 50Gi
          storageClassName: hpe-nimble-chaska-prod-retain
    config:
      http:
        compression: true
        compression_level: 9
      transport:
        compress: true
      node.roles: ["data", "ingest", "transform"]
      reindex.remote.whitelist: "incentives-search.fcaus-p-storage.autodata.tech:32000"
      reindex.ssl.certificate_authorities: "/usr/share/elasticsearch/config/certificates-source/tls.crt"
    podTemplate:
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "node-role.kubernetes.io/project"
                      operator: In
                      values:
                        - incentives
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      elasticsearch.k8s.elastic.co/cluster-name: incentives
                      elasticsearch.k8s.elastic.co/node-data: "true"
                  topologyKey: kubernetes.io/hostname
                weight: 100
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
              runAsUser: 0
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
          - name: install-plugins
            command:
              - sh
              - -c
              - |
                bin/elasticsearch-plugin remove --purge repository-s3 prometheus-exporter
                bin/elasticsearch-plugin install -b repository-s3 https://github.com/mindw/elasticsearch-prometheus-exporter/releases/download/8.11.1.0/prometheus-exporter-8.11.1.0.zip
          - name: take-nfs-ownership
            command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/backup || true']
            volumeMounts:
              - name: elastic-backup
                mountPath:  /usr/share/elasticsearch/backup
        containers:
          - name: elasticsearch
            env:
              - name: path.repo
                value:  /usr/share/elasticsearch/backup
            resources:
              limits:
                memory: 16Gi
            volumeMounts:
              - name: elastic-cert-hillsboro
                mountPath: /usr/share/elasticsearch/config/certificates-source
              - name: elastic-backup
                mountPath: /usr/share/elasticsearch/backup
        tolerations:
          - key: "node-role.kubernetes.io/project"
            operator: "Equal"
            value: "incentives"
            effect: "NoSchedule"
        volumes:
          - name: elastic-cert-hillsboro
            secret:
              secretName: incentives-es-http-certs-public-hillsboro
          - name: elastic-backup
            persistentVolumeClaim:
              claimName: incentives-elastic-backup-pvc
