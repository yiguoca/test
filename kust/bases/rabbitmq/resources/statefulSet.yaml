apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: messaging
    app.kubernetes.io/version: 3.8.3-management-alpine
  name: rabbitmq
spec:
  serviceName: rabbitmq
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/component: messaging
      app.kubernetes.io/version: 3.8.3-management-alpine
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
        app.kubernetes.io/component: messaging
        app.kubernetes.io/version: 3.8.3-management-alpine
      name: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  key: rabbitmq-user
                  name: rabbitmq-credentials
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  key: rabbitmq-password
                  name: rabbitmq-credentials
            - name: RABBITMQ_DEFAULT_VHOST
              valueFrom:
                secretKeyRef:
                  key: rabbitmq-vhost
                  name: rabbitmq-credentials
          image: rabbitmq:3.8.3-management-alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - rabbitmqctl
                - status
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: rabbitmq
          ports:
            - containerPort: 5672
              name: amqp
              protocol: TCP
            - containerPort: 15672
              name: management
              protocol: TCP
            - containerPort: 15692
              name: metrics
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - rabbitmqctl
                - status
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: data
            - name: rabbit-config-vol
              mountPath: /etc/rabbitmq/enabled_plugins
              subPath: enabled_plugins
              readOnly: false
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: data
        - configMap:
            name: rabbit-config
          name: rabbit-config-vol
