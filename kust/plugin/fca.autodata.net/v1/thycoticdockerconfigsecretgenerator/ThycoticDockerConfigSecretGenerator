#!/bin/bash

# shellcheck source=/plugin/fca.autodta.net/v1/ThycoticDockerConfigSecretGenerator
# For development purposes, set BASEDIR to the full path of the kustom
# directory, e.g.  BASEDIR=~/git/fcaus/support/kustom
if [ "${BASEDIR}" != "" ]
then
  source ${BASEDIR}/plugin/fca.autodata.net/v1/parse-yaml.sh
  source ${BASEDIR}/plugin/fca.autodata.net/v1/thycotic.sh
else
  source $(dirname $0)/../parse-yaml.sh
  source $(dirname $0)/../thycotic.sh
fi

create_variables $1

if [ "${secrets}" = "" ]
then
  SECRET_TYPE_TOKEN=$(thycotic get --secret.id ${secret}|grep -c Token)
  if [ $SECRET_TYPE_TOKEN -gt 0 ];
  then
    # Secret is of token-file-based type
    THYCOTIC_DOCKER_CONFIG_JSON=$(get_secret ${secret} token-name token-file-based)
  else
    # Assume secret is of password type
    DOCKER_PASSWORD=$(get_secret ${secret} password password | tr -d '"')
    DOCKER_USERNAME=$(get_secret ${secret} username password | tr -d '"')
    DOCKER_AUTH=$(echo -n "$DOCKER_USERNAME:$DOCKER_PASSWORD"| openssl base64 -A)
    DOCKER_EMAIL="not-a-real-email@autodata.net"
    DOCKER_SERVER=$(get_secret ${secret} resource password | tr -d '"')
    THYCOTIC_DOCKER_CONFIG_JSON="{\"auths\":{\"$DOCKER_SERVER\":{\"auth\":\"$DOCKER_AUTH\",\"email\":\"$DOCKER_EMAIL\",\"password\":\"$DOCKER_PASSWORD\",\"username\":\"$DOCKER_USERNAME\"}}}";
  fi
else
  THYCOTIC_DOCKER_CONFIG_JSON=$(cat <<EOF
{
  "auths":
    {
EOF
)
  IFS=, read -ra the_secrets <<<"${secrets}"
  let count=1
  for secret in ${the_secrets[@]}
  do
    SECRET_TYPE_WEB_PASSWORD=$(thycotic get --secret.id ${secret} | grep -c 'Web Password')
    if [ $SECRET_TYPE_WEB_PASSWORD -gt 0 ]
    then
      DOCKER_SERVER=$(get_secret ${secret} url web-password | tr -d '"')
      DOCKER_USERNAME=$(get_secret ${secret} username web-password | tr -d '"')
      DOCKER_PASSWORD=$(get_secret ${secret} password web-password | tr -d '"')
    else
      DOCKER_SERVER=$(get_secret ${secret} resource password | tr -d '"')
      DOCKER_USERNAME=$(get_secret ${secret} username password | tr -d '"')
      DOCKER_PASSWORD=$(get_secret ${secret} password password | tr -d '"')
    fi
    DOCKER_AUTH=$(echo -n "${DOCKER_USERNAME}:${DOCKER_PASSWORD}" | openssl base64 -A)
    THYCOTIC_DOCKER_CONFIG_JSON=$(cat <<EOF
${THYCOTIC_DOCKER_CONFIG_JSON}
    "${DOCKER_SERVER}": {
      "auth": "${DOCKER_AUTH}"
    }
EOF
)
    if [ $count -lt ${#the_secrets[@]} ]
    then
      THYCOTIC_DOCKER_CONFIG_JSON="${THYCOTIC_DOCKER_CONFIG_JSON},"
      count=$((count+1))
    fi
  done
  THYCOTIC_DOCKER_CONFIG_JSON=$(cat <<EOF
${THYCOTIC_DOCKER_CONFIG_JSON}
  }
}
EOF
)
fi
THYCOTIC_DOCKER_CONFIG_JSON_B64=$(echo $THYCOTIC_DOCKER_CONFIG_JSON | openssl base64 -A)
echo "apiVersion: v1"
echo "kind: Secret"
echo "metadata:"
echo "  name: ${metadata_name}"
if [ "" != "${metadata_namespace}" ]; then
  echo "  namespace: ${metadata_namespace}"
fi
echo "data:"
echo "  .dockerconfigjson: ${THYCOTIC_DOCKER_CONFIG_JSON_B64}"
echo "type: kubernetes.io/dockerconfigjson"
