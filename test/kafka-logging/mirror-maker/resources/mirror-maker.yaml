---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaMirrorMaker2
metadata:
  name: mirror-maker
spec:
  version: 3.0.0
  replicas: 3
  # The cluster alias for Kafka Connect
  connectCluster: "test"
  resources:
    requests:
      memory: "500Mi"
      cpu: "50m"
    limits:
      cpu: "400m"
  jvmOptions:
    -Xms: 1024m
    -Xmx: 1024m
  clusters:
  ############### SOURCE CLUSTER (Active) ################
  - alias: "ct-storage"
    bootstrapServers: ct-storage-kafka.logging.svc:30030
    config:
      # -1 means it will use the default replication factor configured in the broker
      config.storage.replication.factor: -1
      offset.storage.replication.factor: -1
      status.storage.replication.factor: -1 
  ############### TARGET CLUSTER (Passive) ################        
  - alias: "test"
    bootstrapServers: kafka-logging-kafka-external-bootstrap.logging.svc:9097
    config:
      # producer.buffer.memory: 131072000
      # producer.batch.size: 52428
      offset.flush.timeout.ms: 50000
      # The following KafkaConnect topics are created by default. You can change the default
      # replication factors (it is 3) and their names here.
      #
      # Kafka topic that stores connector and task status configurations
      # Replication factor for internal topic 'mirrormaker2-cluster-configs'
      config.storage.replication.factor: 3
      config.storage.topic: mirrormaker2-cluster-configs
      #
      # Kafka topic that stores connector offsets.
      # Replication factor for internal topic 'mirrormaker2-cluster-offsets'
      offset.storage.replication.factor: 3
      offset.storage.topic: mirrormaker2-cluster-offsets
      #
      # Kafka topic that stores connector and task status updates.
      # Replication factor for internal topic 'mirrormaker2-cluster-status'
      status.storage.replication.factor: 3
      status.storage.topic: mirrormaker2-cluster-status
      
  mirrors:
  #######################
  # Replication flows
  #######################
  - sourceCluster: "ct-storage"
    targetCluster: "test"
    sourceConnector:
      tasksMax: 5
      config:
        # The replication factor for the MirrorSourceConnector 'offset-syncs' internal topic
        # that maps the offsets of the source and target clusters.
        offset-syncs.topic.replication.factor: 3
        sync.topic.acls.enabled: "false"
        # Defines the separator used for the renaming of remote topics (useful when mirroring ACTIVE / ACTIVE clusters)
        replication.policy.separator: ""
        # Override automatic renaming (use this policy for ACTIVE / PASSIVE use cases)
        # Instead of prepending the name with the name of the source cluster, the topic retains its original name
        replication.policy.class: "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy"
        # Refresh interval to check new topics created in source cluster
        refresh.topics.interval.seconds: 60
    heartbeatConnector:
      config:
        # Internal topic 'heartbeats' created at the target cluster
        heartbeats.topic.replication.factor: 3
    checkpointConnector:
      config:
        # Internal topic '<source-cluster-alias>.checkpoints.internal' created at the target cluster
        checkpoints.topic.replication.factor: 3
        # Override automatic renaming (use this policy for ACTIVE / PASSIVE use cases)
        # Instead of prepending the name with the name of the source cluster, the topic retains its original name
        replication.policy.class: "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy"        
        # Offset synchronization periodically transfers the consumer offsets for the consumer groups
        # of a source cluster into the consumer offsets topic of a target cluster.
        sync.group.offsets.enabled: "true"
        # Interval period to sync data offsets from source cluster
        sync.group.offsets.interval.seconds: 10
        # frequency to emit consumer offset information
        emit.checkpoints.interval.seconds: 10
        # Interval period to refresh consumer groups statuses (Default: 600)
        refresh.groups.interval.seconds: 10
        refresh.groups.enabled: "true"
    topicsPattern: "london-application-logs,london-application-errors,london-access-logs,london-access-errors"
    groupsPattern: ".*"
    groupsBlacklistPattern: ""
  logging:
    type: inline
    loggers:
      connect.root.logger.level: "INFO"
  readinessProbe:
    initialDelaySeconds: 45
    timeoutSeconds: 5
  livenessProbe:
    initialDelaySeconds: 80
    timeoutSeconds: 5
  metricsConfig:
    type: jmxPrometheusExporter
    valueFrom:
      configMapKeyRef:
        name: mirror-maker-2-metrics
        key: metrics-config.yml

